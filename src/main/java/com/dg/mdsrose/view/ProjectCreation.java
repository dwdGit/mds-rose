package com.dg.mdsrose.view;

import com.dg.mdsrose.project.dataset.CsvStrategy;
import com.dg.mdsrose.project.dataset.DataStrategy;
import com.dg.mdsrose.project.dataset.DatasetStrategy;
import com.dg.mdsrose.util.DatasetFileFilter;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Objects;

import static com.dg.mdsrose.enums.FileMetadata.CSV;
import static com.dg.mdsrose.enums.FileMetadata.DATA;

public class ProjectCreation extends BaseJFrame implements ActionListener {
    private JTextField pathDatasetField;
    private JButton selectDatasetButton;
    private JLabel selectDatasetLabel;
    private JPanel newProjectPanel;
    private JButton confirmButton;


    public ProjectCreation() {
        createAndShowGUI();
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                new Homepage();
            }
        });
        selectDatasetButton.addActionListener(this);
        confirmButton.addActionListener(this);
    }

    @Override
    protected String setTitle() {
        return "New Project";
    }

    @Override
    protected JPanel setContentPanel() {
        return newProjectPanel;
    }

    @Override
    protected Dimension setPreferredSize() {
        return null;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(this.selectDatasetButton)) {
            selectFile();
        } else if (e.getSource().equals(this.confirmButton)) {
            confirmFile();
        }
    }

    private void confirmFile() {
        DatasetStrategy datasetStrategy;
        if (pathDatasetField.getText().endsWith(DATA.getExtension())) {
            datasetStrategy = new DataStrategy();
        } else if (pathDatasetField.getText().endsWith(CSV.getExtension())) {
            datasetStrategy = new CsvStrategy();
        } else {
            JOptionPane.showMessageDialog(
                this,
                "Select a valid dataset.",
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        datasetStrategy.showFrame(this.pathDatasetField.getText());
        this.dispose();
    }

    private void selectFile() {
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser.setFileFilter(new DatasetFileFilter());
        jFileChooser.setAcceptAllFileFilterUsed(false);

        File file;
        int returnDialog = jFileChooser.showOpenDialog(null);
        if (returnDialog == JFileChooser.APPROVE_OPTION) {
            file = jFileChooser.getSelectedFile();
        } else {
            System.out.println("No File Selected");
            return;
        }
        if (Objects.isNull(file)) {
            System.out.println("No Valid File Selected");
        }
        this.pathDatasetField.setText(file.getAbsolutePath());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        newProjectPanel = new JPanel();
        newProjectPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(10, 10, 10, 10), -1, -1));
        pathDatasetField = new JTextField();
        pathDatasetField.setEditable(false);
        newProjectPanel.add(pathDatasetField, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        selectDatasetLabel = new JLabel();
        selectDatasetLabel.setText("Select Dataset...");
        newProjectPanel.add(selectDatasetLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        newProjectPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        newProjectPanel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        selectDatasetButton = new JButton();
        selectDatasetButton.setText("Select");
        newProjectPanel.add(selectDatasetButton, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        confirmButton = new JButton();
        confirmButton.setText("Confirm");
        newProjectPanel.add(confirmButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return newProjectPanel;
    }
}
