package com.dg.mdsrose.view;

import com.dg.mdsrose.project.DBProjectDAO;
import com.dg.mdsrose.project.DBProjectService;
import com.dg.mdsrose.project.ProjectService;
import com.dg.mdsrose.project.model.Project;
import com.dg.mdsrose.user.UserSession;
import com.dg.mdsrose.view.renderer.ProjectRenderer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Objects;

public class Homepage extends BaseJFrame implements ActionListener {
    private JLabel yourProjectsLabel;
    private JPanel homepagePanel;
    private JButton newProjectButton;
    private JList<Project> projectList;
    private JButton openProjectButton;

    private final UserSession userSession = UserSession.getInstance();

    public Homepage() {
        createAndShowGUI();
        getProjects();
        newProjectButton.addActionListener(this);
        openProjectButton.addActionListener(this);
    }

    @Override
    protected String setTitle() {
        return "Homepage";
    }

    @Override
    protected JPanel setContentPanel() {
        return homepagePanel;
    }

    @Override
    protected int setDefaultCloseOperation() {
        return WindowConstants.EXIT_ON_CLOSE;
    }

    private void getProjects() {
        ProjectService projectService = new ProjectService(new DBProjectDAO());
        List<Project> projects = projectService.findProjectByUserId(userSession.getUserId());
        projectList.setListData(projects.toArray(new Project[0]));
        projectList.setCellRenderer(new ProjectRenderer());
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(this.newProjectButton)) {
            goToNewProject();
        } else if (e.getSource().equals(this.openProjectButton)) {
            openProject();
        }
    }

    private void openProject() {
        Project selectedProject = projectList.getSelectedValue();
        if (Objects.isNull(selectedProject)) {
            JOptionPane.showMessageDialog(null, "No project selected!", "Project Selection", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ProjectService projectService = new DBProjectService().createProjectService();
        new ShowProject(projectService, selectedProject.getId(), false);
        this.dispose();
    }

    private void goToNewProject() {
        new ProjectCreation();
        this.dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        homepagePanel = new JPanel();
        homepagePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(10, 10, 10, 10), -1, -1));
        yourProjectsLabel = new JLabel();
        yourProjectsLabel.setText("Your projects");
        homepagePanel.add(yourProjectsLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        newProjectButton = new JButton();
        newProjectButton.setText("New project");
        homepagePanel.add(newProjectButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        projectList = new JList();
        projectList.setEnabled(true);
        projectList.setVisible(true);
        homepagePanel.add(projectList, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        openProjectButton = new JButton();
        openProjectButton.setEnabled(true);
        openProjectButton.setText("Open Project");
        openProjectButton.setVisible(true);
        homepagePanel.add(openProjectButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return homepagePanel;
    }
}
